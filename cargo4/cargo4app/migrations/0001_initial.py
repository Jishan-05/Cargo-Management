# Generated by Django 5.0.7 on 2024-08-13 08:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.IntegerField(db_column='Admin_id', primary_key=True, serialize=False)),
                ('admin_name', models.CharField(db_column='Admin_name', max_length=45)),
                ('admin_pass', models.CharField(db_column='Admin_pass', max_length=10)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('cargo_id', models.IntegerField(primary_key=True, serialize=False)),
                ('cust_id', models.IntegerField()),
                ('product_id', models.IntegerField(db_column='Product_id')),
                ('emp_id', models.IntegerField(db_column='Emp_id')),
                ('weight', models.CharField(max_length=10)),
                ('bill_no', models.IntegerField(db_column='Bill_no')),
            ],
            options={
                'db_table': 'cargo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CargoWeight',
            fields=[
                ('weight_id', models.IntegerField(primary_key=True, serialize=False)),
                ('weight', models.CharField(max_length=30)),
                ('measurement_unit', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'cargo_weight',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cust_id', models.AutoField(primary_key=True, serialize=False)),
                ('cust_firstname', models.CharField(max_length=10)),
                ('customer_lastname', models.CharField(max_length=10)),
                ('cust_password', models.CharField(db_column='Cust_password', max_length=255)),
                ('cust_gender', models.CharField(db_column='Cust_gender', max_length=10)),
                ('cust_contact_no_field', models.IntegerField(db_column='Cust_contact_no.')),
                ('cust_email', models.CharField(db_column='Cust_email', max_length=30)),
                ('cust_address', models.CharField(db_column='Cust_address', max_length=60)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('delivery_id', models.IntegerField(db_column='Delivery_id', primary_key=True, serialize=False)),
                ('cargo_id', models.IntegerField(db_column='Cargo_id')),
                ('pickup_date', models.DateField(db_column='Pickup_date')),
                ('delivery_date', models.DateField(db_column='Delivery_date')),
                ('pickup_address', models.CharField(db_column='Pickup_address', max_length=100)),
                ('destination_address', models.CharField(db_column='Destination_address', max_length=100)),
            ],
            options={
                'db_table': 'delivery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('designation_id', models.IntegerField(db_column='Designation_id', primary_key=True, serialize=False)),
                ('designation', models.CharField(db_column='Designation', max_length=20)),
                ('qualification', models.CharField(db_column='Qualification', max_length=20)),
            ],
            options={
                'db_table': 'designation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_id', models.IntegerField(db_column='Emp_id', primary_key=True, serialize=False)),
                ('emp_firstname', models.CharField(db_column='Emp_Firstname', max_length=10)),
                ('emp_lastname', models.CharField(db_column='Emp_Lastname', max_length=10)),
                ('emp_password', models.CharField(db_column='Emp_password', max_length=10)),
                ('designation_id', models.IntegerField(db_column='Designation_id')),
                ('experience', models.CharField(db_column='Experience', max_length=30)),
                ('emp_salary', models.IntegerField(db_column='Emp_salary')),
                ('gender', models.CharField(db_column='Gender', max_length=5)),
                ('emp_dob', models.DateField(db_column='Emp_DOB')),
                ('emp_doj', models.DateField(db_column='Emp_DOJ')),
                ('emp_contact_no', models.BigIntegerField(db_column='Emp_contact_no')),
                ('emp_email', models.CharField(db_column='Emp_email', max_length=30)),
                ('emp_address', models.CharField(db_column='Emp_address', max_length=100)),
                ('working_days', models.CharField(db_column='Working_days', max_length=60)),
                ('leave_days', models.CharField(db_column='Leave_days', max_length=60)),
            ],
            options={
                'db_table': 'employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('f_id', models.IntegerField(db_column='F_id', primary_key=True, serialize=False)),
                ('feedback', models.CharField(db_column='Feedback', max_length=50)),
                ('f_date', models.DateField(db_column='F_date')),
                ('cust_id', models.IntegerField(db_column='Cust_id')),
            ],
            options={
                'db_table': 'feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('inventory_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('arrival_date', models.DateField(db_column='Arrival_date')),
                ('departure_date', models.DateField(db_column='Departure_date')),
            ],
            options={
                'db_table': 'inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_id', models.IntegerField(db_column='Invoice_id', primary_key=True, serialize=False)),
                ('due_date', models.DateField(db_column='Due_Date')),
            ],
            options={
                'db_table': 'invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Materials',
            fields=[
                ('material_id', models.IntegerField(db_column='Material_id', primary_key=True, serialize=False)),
                ('material_name', models.CharField(db_column='Material_name', max_length=20)),
                ('material_type', models.CharField(max_length=60)),
                ('quantity', models.CharField(db_column='Quantity', max_length=20)),
                ('materialprice', models.IntegerField(db_column='Materialprice')),
            ],
            options={
                'db_table': 'materials',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('order_id', models.IntegerField(primary_key=True, serialize=False)),
                ('order_date', models.DateField()),
                ('pay_method', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'order_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('pay_id', models.IntegerField(primary_key=True, serialize=False)),
                ('pay_date', models.DateField(db_column='Pay_date')),
                ('price_id', models.IntegerField()),
                ('pay_method', models.CharField(db_column='Pay_method', max_length=30)),
                ('pay_amount', models.IntegerField()),
                ('pay_status', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('price_id', models.IntegerField(primary_key=True, serialize=False)),
                ('price_weight', models.IntegerField(db_column='Price/weight')),
                ('price_distance', models.IntegerField(db_column='Price/distance')),
                ('total_price', models.IntegerField(db_column='Total_price')),
            ],
            options={
                'db_table': 'price',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.IntegerField(db_column='Product_id', primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=30)),
                ('weight', models.CharField(max_length=50)),
                ('productprice', models.IntegerField(db_column='ProductPrice')),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.IntegerField(db_column='Service_id', primary_key=True, serialize=False)),
                ('service_name', models.CharField(db_column='Service_name', max_length=20)),
                ('service_desc', models.CharField(db_column='Service_desc', max_length=100)),
            ],
            options={
                'db_table': 'service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('sup_id', models.IntegerField(db_column='Sup_id', primary_key=True, serialize=False)),
                ('sup_name', models.CharField(db_column='Sup_name', max_length=20)),
                ('contact_no', models.BigIntegerField(db_column='Contact_no')),
                ('sup_email', models.CharField(db_column='Sup_email', max_length=30)),
                ('sup_address', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'supplier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('warehouse_id', models.IntegerField(db_column='Warehouse_id', primary_key=True, serialize=False)),
                ('warehouse_address', models.CharField(db_column='Warehouse_address', max_length=100)),
                ('capacity', models.CharField(db_column='Capacity', max_length=100)),
            ],
            options={
                'db_table': 'warehouse',
                'managed': False,
            },
        ),
    ]
